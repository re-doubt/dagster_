[tox]
envlist = py{39,38,37,36}-{unix,windows}-{mypy,pylint,pytest}

[testenv]
usedevelop = true
setenv =
  VIRTUALENV_PIP=21.3.1
passenv = CI_* COVERALLS_REPO_TOKEN BUILDKITE
deps =
  -e ../dagster
  -e ../dagster-graphql
  -e ../libraries/dagster-pandas
  -e ../libraries/dagster-aws
  -e ../libraries/dagster-gcp
  -e ../libraries/dagster-k8s
  -e ../libraries/dagster-slack
  -e ../libraries/dagster-celery
  -e ../libraries/dagster-docker
  -e ../libraries/dagster-airflow
  -e ../libraries/dagster-celery-k8s
  -e ../libraries/dagster-celery-docker
  -e ../libraries/dagstermill

[testenv:mypy]
deps =
  {deps}
  -r ../python_envs/requirements-mypy.txt
commands =
  mypy --config=../../pyproject.toml --non-interactive --install-types {posargs} .

[testenv:pylint]
deps =
  {deps}
  -r ../python_envs/requirements-pylint.txt
commands =
  pylint -j0 --rcfile=../../pyproject.toml {posargs} dagster_test dagster_test_tests

[testenv:pytest]
extras =
  {extras}
  test
deps =
  {deps}
  ../dagster[test]
allowlist_externals =
  /bin/bash
commands =
  !windows: /bin/bash -c '! pip list --exclude-editable | grep -e dagster -e dagit'
  coverage erase
  pytest -vv -s -p dagster_test.fixtures --junitxml=test_results.xml --cov=dagster_test --cov-append --cov-report= {posargs}
  coverage report --omit='.tox/*,**/test_*.py' --skip-covered
  coverage html --omit='.tox/*,**/test_*.py'
  coverage xml --omit='.tox/*,**/test_*.py'
